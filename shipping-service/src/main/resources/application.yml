spring:
  r2dbc:
    username: ${app.postgres.user}
    password: ${app.postgres.password}
    url: r2dbc:postgresql://${app.postgres.host}:${app.postgres.port}/${app.postgres.database}
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10

  flyway:
    enabled: true
    locations: classpath:db/migration
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: ${spring.r2dbc.url}

  cloud:
    function:
      definition: processor
    stream:
      default:
        producer:
          useNativeEncoding: true
      bindings:
        processor-in-0:
          destination: shipping-request
          group: shipping-service-group
        processor-out-0:
          destination: shipping-response
      kafka:
        binder:
          consumer-properties:
            "value.deserializer": org.springframework.kafka.support.serializer.JsonDeserializer
            "key.deserializer": org.apache.kafka.common.serialization.StringDeserializer
            "auto.offset.reset": "earliest"
            "spring.json.trusted.packages": "net.greeta.stock.common.messages.*"
          producer-properties:
            "value.serializer": org.springframework.kafka.support.serializer.JsonSerializer
            "key.serializer": org.apache.kafka.common.serialization.StringSerializer

app:
  postgres:
    host: stock-postgres
    port: 5432
    database: shippingdb
    user: shippingdbuser
    password: dbpass